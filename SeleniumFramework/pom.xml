<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.selenium.framework</groupId>
	<artifactId>SeleniumFramework</artifactId>
	<version>1.0.0</version>

	<properties>
		<!-- Define the Java version for compilation -->
		<maven.compiler.source>11</maven.compiler.source> <!-- Or 17, or 1.8 if strictly Java 8 -->
		<maven.compiler.target>11</maven.compiler.target> <!-- Must match maven.compiler.source -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>4.34.0</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-manager</artifactId>
			<version>4.34.0</version>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>7.11.0</version>
			<scope>test</scope>
		</dependency>

		<!-- Add ExtentReports dependency if not already present and you're using it directly -->
		<!-- Example (check Maven Central for latest version):
		<dependency>
			<groupId>com.aventstack</groupId>
			<artifactId>extentreports</artifactId>
			<version>5.1.1</version>
		</dependency>
		-->

		<!-- Add Log4j dependency if not already present -->
		<!-- Example (check Maven Central for latest version):
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.23.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.23.1</version>
		</dependency>
		-->

	</dependencies>

	<build>
		<plugins>
			<!-- Maven Compiler Plugin Configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version> <!-- Use the version Maven reported, or a newer stable one -->
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<!-- Optional: To suppress warnings about obsolete options if you're stuck on older Java versions -->
					<compilerArgs>
                        <arg>-Xlint:-options</arg>
                    </compilerArgs>
				</configuration>
			</plugin>

			<!-- Maven Surefire Plugin Configuration (for running TestNG tests) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.5</version> <!-- Use a recent stable version -->
				<configuration>
					<!-- Specify your TestNG XML suite file(s) -->
					<suiteXmlFiles>
						<suiteXmlFile>testng.xml</suiteXmlFile> <!-- Make sure this path is correct -->
					</suiteXmlFiles>
					<!-- Optional: To skip tests during 'mvn install' (already handled by -DskipTests in Jenkinsfile) -->
					<!-- <skipTests>false</skipTests> -->
				</configuration>
			</plugin>

			<!-- Optional: Maven Failsafe Plugin for Integration Tests -->
			<!-- If you separate unit and integration tests, configure failsafe for integration tests -->
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.2.5</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin> -->

		</plugins>
	</build>
</project>
